{
  "version": "0.1.0",
  "scope": "tree",
  "id": "807d337e-9136-485a-83b9-d6eea18004e4",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "bcf0a108-b317-4ef6-b10e-3fa8b1e47437",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "bcf0a108-b317-4ef6-b10e-3fa8b1e47437": {
      "id": "bcf0a108-b317-4ef6-b10e-3fa8b1e47437",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "892966b3-8ac8-472c-9524-5ed8f12dced6",
        "Next": {
          "Id": "b1ded8ae-e743-4899-817f-ec6df34285c2",
          "Next": {
            "Id": "855c293f-fa41-4926-80c2-fc77f01101f7",
            "Next": {
              "Id": "aad9a0b6-7aec-4c28-8e65-b119123fd6e5",
              "Next": {
                "Id": "7d98e3a2-4713-44d0-8ff4-0ae86f91231a",
                "Next": {
                  "Id": "d316240c-f755-4e7e-ab67-72b4ec0f5808",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "892966b3-8ac8-472c-9524-5ed8f12dced6": {
      "id": "892966b3-8ac8-472c-9524-5ed8f12dced6",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -852,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does the AI system react if feature X is changed?"
        }
      }
    },
    "b1ded8ae-e743-4899-817f-ec6df34285c2": {
      "id": "b1ded8ae-e743-4899-817f-ec6df34285c2",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": -384,
        "y": 252
      },
      "firstChild": {
        "Id": "a999e662-5e38-406d-baa4-648ed9659d0b",
        "Next": {
          "Id": "0d04f1a4-57c8-4220-8a62-937e5cf60eb0",
          "Next": null
        }
      }
    },
    "855c293f-fa41-4926-80c2-fc77f01101f7": {
      "id": "855c293f-fa41-4926-80c2-fc77f01101f7",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -12,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What would be the outcome if features X is changed to value V?"
        }
      }
    },
    "aad9a0b6-7aec-4c28-8e65-b119123fd6e5": {
      "id": "aad9a0b6-7aec-4c28-8e65-b119123fd6e5",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DicePrivate",
      "description": "",
      "properties": {},
      "display": {
        "x": 192,
        "y": 252
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the desired counterfactual class. Defaults to class 0 for multiclass problems and to opposite class for binary class problems. You may also use the string 'opposite' for binary classification",
          "fixed": false
        },
        "features_to_vary": {
          "key": "features_to_vary",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "List of strings representing the feature names to vary. Defaults to all features.",
          "fixed": false
        },
        "num_cfs": {
          "key": "num_cfs",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of counterfactuals to be generated for each instance.",
          "fixed": false
        },
        "method": {
          "key": "method",
          "value": "random",
          "default": "random",
          "range": [
            "random",
            "genetic"
          ],
          "required": "false",
          "type": "select",
          "description": "The method used for counterfactual generation. The supported methods for private data are: 'random' (random sampling) and 'genetic' (genetic algorithms). Defaults to 'random'.",
          "fixed": false
        }
      }
    },
    "7d98e3a2-4713-44d0-8ff4-0ae86f91231a": {
      "id": "7d98e3a2-4713-44d0-8ff4-0ae86f91231a",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 396,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What other instances would get the same outcome?"
        }
      }
    },
    "d316240c-f755-4e7e-ab67-72b4ec0f5808": {
      "id": "d316240c-f755-4e7e-ab67-72b4ec0f5808",
      "Concept": "Explanation Method",
      "Instance": "/Images/GradCam",
      "description": "",
      "properties": {},
      "display": {
        "x": 612,
        "y": 252
      },
      "params": {
        "target_layer": {
          "key": "target_layer",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": true,
          "type": "text",
          "description": "Name of target layer to be provided as a string. This is the layer that you want to compute the visualization for. Usually this will be the last convolutional layer in the model. It is also possible to specify internal components of this layer by passing the target_layer_index parameter in params. To get the target layer, this method executes 'model.<target_layer>[<target_layer_index>]' Some common examples of these parameters for well-known models: Resnet18 and 50: model.layer4 -> 'target_layer':'layer4' VGG, densenet161: model.features[-1] -> 'target_layer':'features', 'target_layer_index':-1 mnasnet1_0: model.layers[-1] -> 'target_layer':'layers', 'target_layer_index':-1",
          "fixed": false
        },
        "target_layer_index": {
          "key": "target_layer_index",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Index of the target layer to be accessed. Provide it when you want to focus on a specific component of the target layer. If not provided, the whole layer specified as target when uploading the model will be used.",
          "fixed": false
        },
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the target class to generate the explanation. If not provided, defaults to the class with the highest predicted probability.",
          "fixed": false
        },
        "aug_smooth": {
          "key": "aug_smooth",
          "value": true,
          "default": true,
          "range": [
            true,
            false
          ],
          "required": "false",
          "type": "text",
          "description": "Boolean indicating whether to apply augmentation smoothing (defaults to True). This has the effect of better centering the CAM around the objects. However, it increases the run time by a factor of x6.",
          "fixed": false
        }
      }
    },
    "a999e662-5e38-406d-baa4-648ed9659d0b": {
      "id": "a999e662-5e38-406d-baa4-648ed9659d0b",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": -540,
        "y": 384
      },
      "firstChild": {
        "Id": "bf18f977-765d-43ee-a0b2-d2f175cf25c6",
        "Next": {
          "Id": "cbb3bf82-df20-4d67-9e29-e202248f7b64",
          "Next": null
        }
      }
    },
    "0d04f1a4-57c8-4220-8a62-937e5cf60eb0": {
      "id": "0d04f1a4-57c8-4220-8a62-937e5cf60eb0",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/SHAPDependence",
      "description": "",
      "properties": {},
      "display": {
        "x": -228,
        "y": 384
      },
      "params": {
        "feature": {
          "key": "feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the feature to be displayed. Defaults to the feature with the highest average SHAP value.",
          "fixed": false
        },
        "interaction_feature": {
          "key": "interaction_feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the interaction feature used for coloring the instances. Defaults to the feature with the highest interaction value with the feature specified in the previous parameter.",
          "fixed": false
        }
      }
    },
    "bf18f977-765d-43ee-a0b2-d2f175cf25c6": {
      "id": "bf18f977-765d-43ee-a0b2-d2f175cf25c6",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/RegressionPredictedVsActual",
      "description": "",
      "properties": {},
      "display": {
        "x": -636,
        "y": 516
      }
    },
    "cbb3bf82-df20-4d67-9e29-e202248f7b64": {
      "id": "cbb3bf82-df20-4d67-9e29-e202248f7b64",
      "Concept": "Explanation Method",
      "Instance": "/Images/SquareGrad",
      "description": "",
      "properties": {},
      "display": {
        "x": -432,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "type": "text"
        },
        "nb_samples": {
          "key": "nb_samples",
          "value": 50,
          "default": 50,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Number of noisy samples generated for the smoothing procedure. Defaults to 50.",
          "type": "number"
        },
        "noise": {
          "key": "noise",
          "value": 0.2,
          "default": 0.2,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Scalar, noise used as standard deviation of a normal law centered on zero. Defaults to 0.2.",
          "type": "number"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}