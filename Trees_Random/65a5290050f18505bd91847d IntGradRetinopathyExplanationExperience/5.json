{
  "version": "0.1.0",
  "scope": "tree",
  "id": "1ee77d67-f550-4210-beef-31482f38a781",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "4d9549ed-e5fa-4c9c-8087-fdbbc1fb7f6b",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "4d9549ed-e5fa-4c9c-8087-fdbbc1fb7f6b": {
      "id": "4d9549ed-e5fa-4c9c-8087-fdbbc1fb7f6b",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "70100888-9bee-4634-84c9-ae7d8da7ddce",
        "Next": {
          "Id": "7b9b709c-0299-4b05-affa-cc201913ee20",
          "Next": {
            "Id": "04283346-55f1-45f4-9274-b87a3c190613",
            "Next": {
              "Id": "85df9e52-8787-48ac-9b1a-9d03a657c307",
              "Next": {
                "Id": "9938d75f-b2ec-4fda-aca4-605a91ef6e03",
                "Next": {
                  "Id": "ece7575f-8e79-4db5-8ecf-967f8af9b170",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "70100888-9bee-4634-84c9-ae7d8da7ddce": {
      "id": "70100888-9bee-4634-84c9-ae7d8da7ddce",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -852,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What is the scope of the AI system capabilities?"
        }
      }
    },
    "7b9b709c-0299-4b05-affa-cc201913ee20": {
      "id": "7b9b709c-0299-4b05-affa-cc201913ee20",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": -384,
        "y": 252
      },
      "firstChild": {
        "Id": "e1066d74-f764-4c63-aefc-7960011e281a",
        "Next": {
          "Id": "27018cb5-8fac-4882-820b-5c15ffcacba3",
          "Next": null
        }
      }
    },
    "04283346-55f1-45f4-9274-b87a3c190613": {
      "id": "04283346-55f1-45f4-9274-b87a3c190613",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -12,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What are the possible outcomes of the AI system?"
        }
      }
    },
    "85df9e52-8787-48ac-9b1a-9d03a657c307": {
      "id": "85df9e52-8787-48ac-9b1a-9d03a657c307",
      "Concept": "Explanation Method",
      "Instance": "/Timeseries/ConfusionMatrix",
      "description": "",
      "properties": {},
      "display": {
        "x": 192,
        "y": 252
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "fixed": false
        }
      }
    },
    "9938d75f-b2ec-4fda-aca4-605a91ef6e03": {
      "id": "9938d75f-b2ec-4fda-aca4-605a91ef6e03",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 396,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How much evidence has been considered to build the AI system?"
        }
      }
    },
    "ece7575f-8e79-4db5-8ecf-967f8af9b170": {
      "id": "ece7575f-8e79-4db5-8ecf-967f8af9b170",
      "Concept": "Explanation Method",
      "Instance": "/Images/GradCam",
      "description": "",
      "properties": {},
      "display": {
        "x": 612,
        "y": 252
      },
      "params": {
        "target_layer": {
          "key": "target_layer",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": true,
          "type": "text",
          "description": "Name of target layer to be provided as a string. This is the layer that you want to compute the visualization for. Usually this will be the last convolutional layer in the model. It is also possible to specify internal components of this layer by passing the target_layer_index parameter in params. To get the target layer, this method executes 'model.<target_layer>[<target_layer_index>]' Some common examples of these parameters for well-known models: Resnet18 and 50: model.layer4 -> 'target_layer':'layer4' VGG, densenet161: model.features[-1] -> 'target_layer':'features', 'target_layer_index':-1 mnasnet1_0: model.layers[-1] -> 'target_layer':'layers', 'target_layer_index':-1",
          "fixed": false
        },
        "target_layer_index": {
          "key": "target_layer_index",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Index of the target layer to be accessed. Provide it when you want to focus on a specific component of the target layer. If not provided, the whole layer specified as target when uploading the model will be used.",
          "fixed": false
        },
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the target class to generate the explanation. If not provided, defaults to the class with the highest predicted probability.",
          "fixed": false
        },
        "aug_smooth": {
          "key": "aug_smooth",
          "value": true,
          "default": true,
          "range": [
            true,
            false
          ],
          "required": "false",
          "type": "text",
          "description": "Boolean indicating whether to apply augmentation smoothing (defaults to True). This has the effect of better centering the CAM around the objects. However, it increases the run time by a factor of x6.",
          "fixed": false
        }
      }
    },
    "e1066d74-f764-4c63-aefc-7960011e281a": {
      "id": "e1066d74-f764-4c63-aefc-7960011e281a",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": -540,
        "y": 384
      },
      "firstChild": {
        "Id": "92661a9e-ee91-45e5-95fe-34eae8a458d7",
        "Next": {
          "Id": "7c2369e9-0c1c-4b7a-80df-f7a08ac04552",
          "Next": null
        }
      }
    },
    "27018cb5-8fac-4882-820b-5c15ffcacba3": {
      "id": "27018cb5-8fac-4882-820b-5c15ffcacba3",
      "Concept": "Explanation Method",
      "Instance": "/Timeseries/iGenCBR",
      "description": "",
      "properties": {},
      "display": {
        "x": -228,
        "y": 384
      },
      "params": {
        "num_neigbours": {
          "key": "num_neigbours",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of neighbours to be included in the explanation. Defaults to 3.",
          "fixed": false
        },
        "feature": {
          "key": "feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the feature to be included in the explanation. Defaults to the first feature in the dataset.",
          "fixed": false
        }
      }
    },
    "92661a9e-ee91-45e5-95fe-34eae8a458d7": {
      "id": "92661a9e-ee91-45e5-95fe-34eae8a458d7",
      "Concept": "Explanation Method",
      "Instance": "/Timeseries/iGenCBR",
      "description": "",
      "properties": {},
      "display": {
        "x": -636,
        "y": 516
      },
      "params": {
        "num_neigbours": {
          "key": "num_neigbours",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of neighbours to be included in the explanation. Defaults to 3.",
          "fixed": false
        },
        "feature": {
          "key": "feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the feature to be included in the explanation. Defaults to the first feature in the dataset.",
          "fixed": false
        }
      }
    },
    "7c2369e9-0c1c-4b7a-80df-f7a08ac04552": {
      "id": "7c2369e9-0c1c-4b7a-80df-f7a08ac04552",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/PR-AUC",
      "description": "",
      "properties": {},
      "display": {
        "x": -432,
        "y": 516
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "type": "number"
        },
        "label": {
          "key": "label",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "String with the name of the label that will be considered the positive class. Defaults to class at index 1 in configuration file.",
          "type": "text"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}