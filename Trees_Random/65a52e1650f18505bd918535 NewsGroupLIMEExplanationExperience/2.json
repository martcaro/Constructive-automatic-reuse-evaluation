{
  "version": "0.1.0",
  "scope": "tree",
  "id": "95190cff-a249-4958-be41-206a00a83082",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "ecce1f72-90df-4929-9739-c5066b5dbb44",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "ecce1f72-90df-4929-9739-c5066b5dbb44": {
      "id": "ecce1f72-90df-4929-9739-c5066b5dbb44",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "45198bcb-56da-4406-bb1c-b215352070d4",
        "Next": {
          "Id": "b9b030a4-c656-407f-8048-4b5553c6644a",
          "Next": null
        }
      }
    },
    "45198bcb-56da-4406-bb1c-b215352070d4": {
      "id": "45198bcb-56da-4406-bb1c-b215352070d4",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -240,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How well does the AI system capture the real-world?"
        }
      }
    },
    "b9b030a4-c656-407f-8048-4b5553c6644a": {
      "id": "b9b030a4-c656-407f-8048-4b5553c6644a",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": 228,
        "y": 252
      },
      "firstChild": {
        "Id": "1453d9bd-af25-43f8-9dc3-646f74eb9ac2",
        "Next": {
          "Id": "70b46e1d-fd18-4da9-b091-143fcdd0077b",
          "Next": null
        }
      }
    },
    "1453d9bd-af25-43f8-9dc3-646f74eb9ac2": {
      "id": "1453d9bd-af25-43f8-9dc3-646f74eb9ac2",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": 72,
        "y": 384
      },
      "firstChild": {
        "Id": "2404f33b-e60e-41b3-8f9f-9f57405d63a4",
        "Next": {
          "Id": "63c0a24c-718d-4b23-ab3c-fb12c5ba5b4b",
          "Next": null
        }
      }
    },
    "70b46e1d-fd18-4da9-b091-143fcdd0077b": {
      "id": "70b46e1d-fd18-4da9-b091-143fcdd0077b",
      "Concept": "Explanation Method",
      "Instance": "/Misc/AIModelPerformance",
      "description": "",
      "properties": {},
      "display": {
        "x": 384,
        "y": 384
      },
      "params": {
        "selected_metrics": {
          "key": "selected_metrics",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "",
          "fixed": false
        }
      }
    },
    "2404f33b-e60e-41b3-8f9f-9f57405d63a4": {
      "id": "2404f33b-e60e-41b3-8f9f-9f57405d63a4",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DicePrivate",
      "description": "",
      "properties": {},
      "display": {
        "x": -36,
        "y": 516
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the desired counterfactual class. Defaults to class 0 for multiclass problems and to opposite class for binary class problems. You may also use the string 'opposite' for binary classification",
          "fixed": false
        },
        "features_to_vary": {
          "key": "features_to_vary",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "List of strings representing the feature names to vary. Defaults to all features.",
          "fixed": false
        },
        "num_cfs": {
          "key": "num_cfs",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of counterfactuals to be generated for each instance.",
          "fixed": false
        },
        "method": {
          "key": "method",
          "value": "random",
          "default": "random",
          "range": [
            "random",
            "genetic"
          ],
          "required": "false",
          "type": "select",
          "description": "The method used for counterfactual generation. The supported methods for private data are: 'random' (random sampling) and 'genetic' (genetic algorithms). Defaults to 'random'.",
          "fixed": false
        }
      }
    },
    "63c0a24c-718d-4b23-ab3c-fb12c5ba5b4b": {
      "id": "63c0a24c-718d-4b23-ab3c-fb12c5ba5b4b",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/KernelSHAPGlobal",
      "description": "",
      "properties": {},
      "display": {
        "x": 180,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the target class to be explained. Ignore for regression models. Defaults to the first class target class defined in the configuration file.",
          "fixed": false
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}