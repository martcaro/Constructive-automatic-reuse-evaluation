{
  "version": "0.1.0",
  "scope": "tree",
  "id": "285318b8-1813-4e64-9c25-02962e77a172",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "1acf2654-35dc-4f62-b554-72e6c2e51a7f",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "1acf2654-35dc-4f62-b554-72e6c2e51a7f": {
      "id": "1acf2654-35dc-4f62-b554-72e6c2e51a7f",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "6c1cba57-d8d3-4c8b-8fbc-d2898ad7b268",
        "Next": {
          "Id": "33b1d9be-030e-4006-832a-d704a54bf586",
          "Next": {
            "Id": "bb9c71b2-c732-4cc0-8816-228769e86309",
            "Next": {
              "Id": "8adf8492-ab78-4133-81c5-d04d60e799ce",
              "Next": {
                "Id": "14dbd3ca-19eb-401a-8c59-86dbfd2b16eb",
                "Next": {
                  "Id": "b20540df-e3cf-4bb9-8b88-498cdcd1d04a",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "6c1cba57-d8d3-4c8b-8fbc-d2898ad7b268": {
      "id": "6c1cba57-d8d3-4c8b-8fbc-d2898ad7b268",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -1068,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What would be the outcome if features X is changed to value V?"
        }
      }
    },
    "33b1d9be-030e-4006-832a-d704a54bf586": {
      "id": "33b1d9be-030e-4006-832a-d704a54bf586",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": -600,
        "y": 252
      },
      "firstChild": {
        "Id": "964929d4-d7df-4ffa-89dd-70fa48cf4ca6",
        "Next": {
          "Id": "0099e1fe-72a5-43ac-8fe9-90e142c1a695",
          "Next": null
        }
      }
    },
    "bb9c71b2-c732-4cc0-8816-228769e86309": {
      "id": "bb9c71b2-c732-4cc0-8816-228769e86309",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -240,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What other instances would get the same outcome?"
        }
      }
    },
    "8adf8492-ab78-4133-81c5-d04d60e799ce": {
      "id": "8adf8492-ab78-4133-81c5-d04d60e799ce",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": 228,
        "y": 252
      },
      "firstChild": {
        "Id": "c8b96bc1-4e79-41b0-997e-6b18617c1726",
        "Next": {
          "Id": "2e2d6837-6e1f-4de2-805d-c972ba29b780",
          "Next": null
        }
      }
    },
    "14dbd3ca-19eb-401a-8c59-86dbfd2b16eb": {
      "id": "14dbd3ca-19eb-401a-8c59-86dbfd2b16eb",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 588,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does the AI system react if feature X is changed?"
        }
      }
    },
    "b20540df-e3cf-4bb9-8b88-498cdcd1d04a": {
      "id": "b20540df-e3cf-4bb9-8b88-498cdcd1d04a",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 1056,
        "y": 252
      },
      "firstChild": {
        "Id": "427abf69-14d5-4b51-b5cb-cc12a3c932f7",
        "Next": {
          "Id": "05f8ebb4-a6f9-4242-bea5-d6278b40c3e4",
          "Next": null
        }
      }
    },
    "964929d4-d7df-4ffa-89dd-70fa48cf4ca6": {
      "id": "964929d4-d7df-4ffa-89dd-70fa48cf4ca6",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": -756,
        "y": 384
      },
      "firstChild": {
        "Id": "2dd2e537-7bd1-4a48-8fba-e3d0a91dfb0b",
        "Next": {
          "Id": "08761e13-0f84-41f1-916a-52b1431c58ef",
          "Next": null
        }
      }
    },
    "0099e1fe-72a5-43ac-8fe9-90e142c1a695": {
      "id": "0099e1fe-72a5-43ac-8fe9-90e142c1a695",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DicePublic",
      "description": "",
      "properties": {},
      "display": {
        "x": -444,
        "y": 384
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the desired counterfactual class. Defaults to class 0 for multiclass problems and to opposite class for binary class problems. You may also use the string 'opposite' for binary classification",
          "fixed": false
        },
        "features_to_vary": {
          "key": "features_to_vary",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "List of strings representing the feature names to vary. Defaults to all features.",
          "fixed": false
        },
        "num_cfs": {
          "key": "num_cfs",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of counterfactuals to be generated for each instance.",
          "fixed": false
        },
        "method": {
          "key": "method",
          "value": "random",
          "default": "random",
          "range": [
            "random",
            "genetic",
            "kdtrees"
          ],
          "required": "false",
          "type": "select",
          "description": "The method used for counterfactual generation. The supported methods for private data are: 'random' (random sampling) and 'genetic' (genetic algorithms). Defaults to 'random'.",
          "fixed": false
        },
        "permitted_range": {
          "key": "permitted_range",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Dictionary with feature names as keys and permitted range in array as values.",
          "fixed": false
        }
      }
    },
    "c8b96bc1-4e79-41b0-997e-6b18617c1726": {
      "id": "c8b96bc1-4e79-41b0-997e-6b18617c1726",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 72,
        "y": 384
      },
      "firstChild": {
        "Id": "9d813faa-1ff6-4204-a6aa-a967b544db41",
        "Next": {
          "Id": "d9f36b27-28c8-4e89-8fb3-b164c56e1c50",
          "Next": null
        }
      }
    },
    "2e2d6837-6e1f-4de2-805d-c972ba29b780": {
      "id": "2e2d6837-6e1f-4de2-805d-c972ba29b780",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/NICE",
      "description": "",
      "properties": {},
      "display": {
        "x": 384,
        "y": 384
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": "other",
          "default": "other",
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the name of the desired counterfactual class. Defaults to string 'other', which will look for any different class.",
          "fixed": false
        },
        "optimization_criteria": {
          "key": "optimization_criteria",
          "value": "sparsity",
          "default": "sparsity",
          "range": [
            "sparsity",
            "proximity",
            "plausibility"
          ],
          "required": "false",
          "type": "select",
          "description": "The counterfactual criteria to optimize.",
          "fixed": false
        }
      }
    },
    "427abf69-14d5-4b51-b5cb-cc12a3c932f7": {
      "id": "427abf69-14d5-4b51-b5cb-cc12a3c932f7",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 900,
        "y": 384
      },
      "firstChild": {
        "Id": "ffc7f1cb-6f2e-435f-92ad-7603bee726a0",
        "Next": {
          "Id": "1ed73cc5-2b0c-4e1d-a836-db27fbd5b62e",
          "Next": null
        }
      }
    },
    "05f8ebb4-a6f9-4242-bea5-d6278b40c3e4": {
      "id": "05f8ebb4-a6f9-4242-bea5-d6278b40c3e4",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/TreeSHAPGlobal",
      "description": "",
      "properties": {},
      "display": {
        "x": 1212,
        "y": 384
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the target class to be explained. Ignore for regression models. Defaults to the first class target class defined in the configuration file.",
          "fixed": false
        }
      }
    },
    "2dd2e537-7bd1-4a48-8fba-e3d0a91dfb0b": {
      "id": "2dd2e537-7bd1-4a48-8fba-e3d0a91dfb0b",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/ROC-AUC",
      "description": "",
      "properties": {},
      "display": {
        "x": -864,
        "y": 516
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "fixed": false
        },
        "label": {
          "key": "label",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String with the name of the label that will be considered the positive class. Defaults to class at index 1 in configuration file.",
          "fixed": false
        }
      }
    },
    "08761e13-0f84-41f1-916a-52b1431c58ef": {
      "id": "08761e13-0f84-41f1-916a-52b1431c58ef",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/PrecisionGraph",
      "description": "",
      "properties": {},
      "display": {
        "x": -660,
        "y": 516
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "fixed": false
        },
        "label": {
          "key": "label",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String with the name of the label that will be considered the positive class. Defaults to class at index 1 in configuration file.",
          "fixed": false
        }
      }
    },
    "9d813faa-1ff6-4204-a6aa-a967b544db41": {
      "id": "9d813faa-1ff6-4204-a6aa-a967b544db41",
      "Concept": "Explanation Method",
      "Instance": "/Text/NLPClassifier",
      "description": "",
      "properties": {},
      "display": {
        "x": -36,
        "y": 516
      },
      "params": {
        "output_format": {
          "key": "output_format",
          "value": "html",
          "default": "html",
          "range": [
            "html",
            "json",
            "png"
          ],
          "required": "false",
          "type": "select",
          "description": "String defining the output format of the explanation. Can be set to either 'html' (default value), 'json', or 'png' (for a wordcloud representation).",
          "fixed": false
        }
      }
    },
    "d9f36b27-28c8-4e89-8fb3-b164c56e1c50": {
      "id": "d9f36b27-28c8-4e89-8fb3-b164c56e1c50",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DicePublic",
      "description": "",
      "properties": {},
      "display": {
        "x": 180,
        "y": 516
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the desired counterfactual class. Defaults to class 0 for multiclass problems and to opposite class for binary class problems. You may also use the string 'opposite' for binary classification",
          "fixed": false
        },
        "features_to_vary": {
          "key": "features_to_vary",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "List of strings representing the feature names to vary. Defaults to all features.",
          "fixed": false
        },
        "num_cfs": {
          "key": "num_cfs",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of counterfactuals to be generated for each instance.",
          "fixed": false
        },
        "method": {
          "key": "method",
          "value": "random",
          "default": "random",
          "range": [
            "random",
            "genetic",
            "kdtrees"
          ],
          "required": "false",
          "type": "select",
          "description": "The method used for counterfactual generation. The supported methods for private data are: 'random' (random sampling) and 'genetic' (genetic algorithms). Defaults to 'random'.",
          "fixed": false
        },
        "permitted_range": {
          "key": "permitted_range",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Dictionary with feature names as keys and permitted range in array as values.",
          "fixed": false
        }
      }
    },
    "ffc7f1cb-6f2e-435f-92ad-7603bee726a0": {
      "id": "ffc7f1cb-6f2e-435f-92ad-7603bee726a0",
      "Concept": "Explanation Method",
      "Instance": "/Images/VarGrad",
      "description": "",
      "properties": {},
      "display": {
        "x": 804,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "fixed": false
        },
        "nb_samples": {
          "key": "nb_samples",
          "value": 50,
          "default": 50,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of noisy samples generated for the smoothing procedure. Defaults to 50.",
          "fixed": false
        },
        "noise": {
          "key": "noise",
          "value": 0.2,
          "default": 0.2,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Scalar, noise used as standard deviation of a normal law centered on zero. Defaults to 0.2.",
          "fixed": false
        }
      }
    },
    "1ed73cc5-2b0c-4e1d-a836-db27fbd5b62e": {
      "id": "1ed73cc5-2b0c-4e1d-a836-db27fbd5b62e",
      "Concept": "Explanation Method",
      "Instance": "/Images/IntegratedGradients",
      "description": "",
      "properties": {},
      "display": {
        "x": 1008,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "type": "text"
        },
        "method": {
          "key": "method",
          "value": "gausslegendre",
          "default": "gausslegendre",
          "range": [
            "gausslegendre",
            "riemann_left",
            "riemann_right",
            "riemann_middle",
            "riemann_trapezoid"
          ],
          "required": "false",
          "description": "Method for the integral approximation. The methods available are: 'riemann_left', 'riemann_right', 'riemann_middle', 'riemann_trapezoid', 'gausslegendre'. Defaults to 'gausslegendre'.",
          "type": "select"
        },
        "n_steps": {
          "key": "n_steps",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Number of step in the path integral approximation from the baseline to the input instance. Defaults to 10.",
          "type": "number"
        },
        "internal_batch_size": {
          "key": "internal_batch_size",
          "value": 100,
          "default": 100,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Batch size for the internal batching. Defaults to 100.",
          "type": "number"
        },
        "png_width": {
          "key": "png_width",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "type": "number"
        },
        "png_height": {
          "key": "png_height",
          "value": 600,
          "default": 600,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "type": "number"
        },
        "plot_type": {
          "key": "plot_type",
          "value": "heatmap",
          "default": "heatmap",
          "range": [
            "heatmap",
            "attributions"
          ],
          "required": "false",
          "description": "Plot style to be used. It can be either 'heatmap' or 'attributions'. Defaults to 'heatmap'.",
          "type": "select"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}