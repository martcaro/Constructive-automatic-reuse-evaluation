{
  "version": "0.1.0",
  "scope": "tree",
  "id": "f94276a6-e5ab-45b5-88ec-c75bfd14243a",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "f299dd58-91a9-4e6b-8f82-e961382d53c6",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "f299dd58-91a9-4e6b-8f82-e961382d53c6": {
      "id": "f299dd58-91a9-4e6b-8f82-e961382d53c6",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "25818752-1243-4229-8a8e-a6da73b7b07a",
        "Next": {
          "Id": "6fe63793-3070-41e4-ad11-fcc8f87889b9",
          "Next": {
            "Id": "ec537ebe-eaaa-4bae-b478-c3490a6f0714",
            "Next": {
              "Id": "5745eaac-b2b1-4bea-ba86-24d144ce5a9a",
              "Next": {
                "Id": "e06c726a-3503-44b0-9c48-a77b5b4cee17",
                "Next": {
                  "Id": "67d4689e-1080-4019-835a-dfcd26de1d56",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "25818752-1243-4229-8a8e-a6da73b7b07a": {
      "id": "25818752-1243-4229-8a8e-a6da73b7b07a",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -888,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What would be the outcome if features X is changed to value V?"
        }
      }
    },
    "6fe63793-3070-41e4-ad11-fcc8f87889b9": {
      "id": "6fe63793-3070-41e4-ad11-fcc8f87889b9",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": -420,
        "y": 252
      },
      "firstChild": {
        "Id": "1f2966e9-574a-4b9f-85e0-8e616723749f",
        "Next": {
          "Id": "16a1bf59-386e-4bee-bc95-0dfce430eb99",
          "Next": null
        }
      }
    },
    "ec537ebe-eaaa-4bae-b478-c3490a6f0714": {
      "id": "ec537ebe-eaaa-4bae-b478-c3490a6f0714",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -60,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What other instances would get the same outcome?"
        }
      }
    },
    "5745eaac-b2b1-4bea-ba86-24d144ce5a9a": {
      "id": "5745eaac-b2b1-4bea-ba86-24d144ce5a9a",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/PR-AUC",
      "description": "",
      "properties": {},
      "display": {
        "x": 156,
        "y": 252
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "fixed": false
        },
        "label": {
          "key": "label",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String with the name of the label that will be considered the positive class. Defaults to class at index 1 in configuration file.",
          "fixed": false
        }
      }
    },
    "e06c726a-3503-44b0-9c48-a77b5b4cee17": {
      "id": "e06c726a-3503-44b0-9c48-a77b5b4cee17",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 360,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does the AI system react if feature X is changed?"
        }
      }
    },
    "67d4689e-1080-4019-835a-dfcd26de1d56": {
      "id": "67d4689e-1080-4019-835a-dfcd26de1d56",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 828,
        "y": 252
      },
      "firstChild": {
        "Id": "ca548d48-2e5e-4d31-8c19-b1741eb26c46",
        "Next": {
          "Id": "83d16cfd-5bc7-43ba-a92e-e9bceaf15b13",
          "Next": null
        }
      }
    },
    "1f2966e9-574a-4b9f-85e0-8e616723749f": {
      "id": "1f2966e9-574a-4b9f-85e0-8e616723749f",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": -576,
        "y": 384
      },
      "firstChild": {
        "Id": "104d4225-102e-4ee3-8529-a39bbf47c81a",
        "Next": {
          "Id": "72e6273f-7cc4-445e-b4a5-a9b0bbb79e7a",
          "Next": null
        }
      }
    },
    "16a1bf59-386e-4bee-bc95-0dfce430eb99": {
      "id": "16a1bf59-386e-4bee-bc95-0dfce430eb99",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/SHAPSummary",
      "description": "",
      "properties": {},
      "display": {
        "x": -264,
        "y": 384
      }
    },
    "ca548d48-2e5e-4d31-8c19-b1741eb26c46": {
      "id": "ca548d48-2e5e-4d31-8c19-b1741eb26c46",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 672,
        "y": 384
      },
      "firstChild": {
        "Id": "05f5c57d-b49b-4178-922f-aae73a20d194",
        "Next": {
          "Id": "97833f7a-ab4c-472a-95c0-a87081377365",
          "Next": null
        }
      }
    },
    "83d16cfd-5bc7-43ba-a92e-e9bceaf15b13": {
      "id": "83d16cfd-5bc7-43ba-a92e-e9bceaf15b13",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/LIME",
      "description": "",
      "properties": {},
      "display": {
        "x": 984,
        "y": 384
      },
      "params": {
        "output_classes": {
          "key": "output_classes",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Array of strings representing the classes to be explained. Defaults to class at index 1. This parameter is overriden by 'top_classes' so make sure to set 'top_classes' to 0 to use it",
          "fixed": false
        },
        "top_classes": {
          "key": "top_classes",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of classes with the highest prediction probability to be explained. Overrides 'output_classes' if provided.",
          "fixed": false
        },
        "num_features": {
          "key": "num_features",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the maximum number of features to be included in the explanation.",
          "fixed": false
        },
        "png_width": {
          "key": "png_width",
          "value": 1000,
          "default": 1000,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "fixed": false
        },
        "png_height": {
          "key": "png_height",
          "value": 400,
          "default": 400,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "fixed": false
        }
      }
    },
    "104d4225-102e-4ee3-8529-a39bbf47c81a": {
      "id": "104d4225-102e-4ee3-8529-a39bbf47c81a",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/TreeSHAPLocal",
      "description": "",
      "properties": {},
      "display": {
        "x": -684,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the target class to be explained. Ignore for regression models. Defaults to the first class target class defined in the configuration file.",
          "fixed": false
        },
        "plot_type": {
          "key": "plot_type",
          "value": "waterfall",
          "default": "waterfall",
          "range": [
            "waterfall",
            "decision",
            "force",
            "bar"
          ],
          "required": "false",
          "type": "select",
          "description": "String with the name of the plot to be generated.",
          "fixed": false
        }
      }
    },
    "72e6273f-7cc4-445e-b4a5-a9b0bbb79e7a": {
      "id": "72e6273f-7cc4-445e-b4a5-a9b0bbb79e7a",
      "Concept": "Explanation Method",
      "Instance": "/Images/LIME",
      "description": "",
      "properties": {},
      "display": {
        "x": -468,
        "y": 516
      },
      "params": {
        "top_classes": {
          "key": "top_classes",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of classes with the highest prediction probability to be explained.",
          "fixed": false
        },
        "segmentation_fn": {
          "key": "segmentation_fn",
          "value": "quickshift",
          "default": "quickshift",
          "range": [
            "quickshift",
            "slic",
            "felzenszwalb"
          ],
          "required": "false",
          "type": "select",
          "description": "A string with an image segmentation algorithm from the following:'quickshift', 'slic', or 'felzenszwalb'.",
          "fixed": false
        },
        "n_segments": {
          "key": "n_segments",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for slic segmentation algorithm. Specifies the (approximate) number of segments of the image.",
          "fixed": false
        },
        "kernel_size": {
          "key": "kernel_size",
          "value": 5,
          "default": 5,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for quickshift segmentation algorithm. Higher means fewer clusters",
          "fixed": false
        },
        "scale": {
          "key": "scale",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for felzenszwalb segmentation algorithm. Higher scale means less and larger segments",
          "fixed": false
        },
        "png_width": {
          "key": "png_width",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "fixed": false
        },
        "png_height": {
          "key": "png_height",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "fixed": false
        }
      }
    },
    "05f5c57d-b49b-4178-922f-aae73a20d194": {
      "id": "05f5c57d-b49b-4178-922f-aae73a20d194",
      "Concept": "Explanation Method",
      "Instance": "/Text/NLPClassifier",
      "description": "",
      "properties": {},
      "display": {
        "x": 564,
        "y": 516
      },
      "params": {
        "output_format": {
          "key": "output_format",
          "value": "html",
          "default": "html",
          "range": [
            "html",
            "json",
            "png"
          ],
          "required": "false",
          "type": "select",
          "description": "String defining the output format of the explanation. Can be set to either 'html' (default value), 'json', or 'png' (for a wordcloud representation).",
          "fixed": false
        }
      }
    },
    "97833f7a-ab4c-472a-95c0-a87081377365": {
      "id": "97833f7a-ab4c-472a-95c0-a87081377365",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DeepSHAPLocal",
      "description": "",
      "properties": {},
      "display": {
        "x": 780,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Name of the target class to be explained. Ignore for regression models. Defaults to the first class target class defined in the configuration file.",
          "type": "text"
        },
        "plot_type": {
          "key": "plot_type",
          "value": "waterfall",
          "default": "waterfall",
          "range": [
            "waterfall",
            "decision",
            "bar"
          ],
          "required": "false",
          "description": "String with the name of the plot to be generated. The supported plots are 'waterfall','decision' and 'bar'. Defaults to 'waterfall'.",
          "type": "select"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}