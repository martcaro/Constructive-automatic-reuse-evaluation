{
  "version": "0.1.0",
  "scope": "tree",
  "id": "7b4b6337-b9c2-4e20-be51-acd5620d140a",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "c87521d5-aac8-4ba9-878d-e55daa521999",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "c87521d5-aac8-4ba9-878d-e55daa521999": {
      "id": "c87521d5-aac8-4ba9-878d-e55daa521999",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "306075af-35e2-4428-89c3-031fe8daab0b",
        "Next": {
          "Id": "b02ddc8c-adc3-495f-8722-9d334714e35f",
          "Next": {
            "Id": "ce3ede6d-bc10-4aab-820b-6933ed445e50",
            "Next": {
              "Id": "e105cfc3-dd6d-446c-8d74-c1f825f222ef",
              "Next": {
                "Id": "8161d460-fd11-4c6c-918c-190175122b6e",
                "Next": {
                  "Id": "528d6382-cf51-401c-8d99-3e611a16fe57",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "306075af-35e2-4428-89c3-031fe8daab0b": {
      "id": "306075af-35e2-4428-89c3-031fe8daab0b",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -564,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What are the possible outcomes of the AI system?"
        }
      }
    },
    "b02ddc8c-adc3-495f-8722-9d334714e35f": {
      "id": "b02ddc8c-adc3-495f-8722-9d334714e35f",
      "Concept": "Explanation Method",
      "Instance": "/Images/GradCam++",
      "description": "",
      "properties": {},
      "display": {
        "x": -360,
        "y": 252
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "fixed": false
        }
      }
    },
    "ce3ede6d-bc10-4aab-820b-6933ed445e50": {
      "id": "ce3ede6d-bc10-4aab-820b-6933ed445e50",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -156,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does the AI system respond to feature X?"
        }
      }
    },
    "e105cfc3-dd6d-446c-8d74-c1f825f222ef": {
      "id": "e105cfc3-dd6d-446c-8d74-c1f825f222ef",
      "Concept": "Explanation Method",
      "Instance": "/Images/ClassificationReport",
      "description": "",
      "properties": {},
      "display": {
        "x": 60,
        "y": 252
      },
      "params": {
        "samples": {
          "key": "samples",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of samples to use from the background data. The whole dataset is used by default.",
          "fixed": false
        }
      }
    },
    "8161d460-fd11-4c6c-918c-190175122b6e": {
      "id": "8161d460-fd11-4c6c-918c-190175122b6e",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 264,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does feature X impact the outcome?"
        }
      }
    },
    "528d6382-cf51-401c-8d99-3e611a16fe57": {
      "id": "528d6382-cf51-401c-8d99-3e611a16fe57",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 732,
        "y": 252
      },
      "firstChild": {
        "Id": "004dc7af-0110-4f3f-9088-5c4f67c82682",
        "Next": {
          "Id": "6fc16fd9-00dc-4a00-863f-5b2b38695331",
          "Next": null
        }
      }
    },
    "004dc7af-0110-4f3f-9088-5c4f67c82682": {
      "id": "004dc7af-0110-4f3f-9088-5c4f67c82682",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 576,
        "y": 384
      },
      "firstChild": {
        "Id": "249d9feb-0a67-4558-ae31-01277e15080f",
        "Next": {
          "Id": "211ab9fd-72f6-4b8b-9791-58578166de34",
          "Next": null
        }
      }
    },
    "6fc16fd9-00dc-4a00-863f-5b2b38695331": {
      "id": "6fc16fd9-00dc-4a00-863f-5b2b38695331",
      "Concept": "Explanation Method",
      "Instance": "/Images/LIME",
      "description": "",
      "properties": {},
      "display": {
        "x": 888,
        "y": 384
      },
      "params": {
        "top_classes": {
          "key": "top_classes",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of classes with the highest prediction probability to be explained.",
          "fixed": false
        },
        "segmentation_fn": {
          "key": "segmentation_fn",
          "value": "quickshift",
          "default": "quickshift",
          "range": [
            "quickshift",
            "slic",
            "felzenszwalb"
          ],
          "required": "false",
          "type": "select",
          "description": "A string with an image segmentation algorithm from the following:'quickshift', 'slic', or 'felzenszwalb'.",
          "fixed": false
        },
        "n_segments": {
          "key": "n_segments",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for slic segmentation algorithm. Specifies the (approximate) number of segments of the image.",
          "fixed": false
        },
        "kernel_size": {
          "key": "kernel_size",
          "value": 5,
          "default": 5,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for quickshift segmentation algorithm. Higher means fewer clusters",
          "fixed": false
        },
        "scale": {
          "key": "scale",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for felzenszwalb segmentation algorithm. Higher scale means less and larger segments",
          "fixed": false
        },
        "png_width": {
          "key": "png_width",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "fixed": false
        },
        "png_height": {
          "key": "png_height",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "fixed": false
        }
      }
    },
    "249d9feb-0a67-4558-ae31-01277e15080f": {
      "id": "249d9feb-0a67-4558-ae31-01277e15080f",
      "Concept": "Explanation Method",
      "Instance": "/Images/GradCam",
      "description": "",
      "properties": {},
      "display": {
        "x": 468,
        "y": 516
      },
      "params": {
        "target_layer": {
          "key": "target_layer",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": true,
          "type": "text",
          "description": "Name of target layer to be provided as a string. This is the layer that you want to compute the visualization for. Usually this will be the last convolutional layer in the model. It is also possible to specify internal components of this layer by passing the target_layer_index parameter in params. To get the target layer, this method executes 'model.<target_layer>[<target_layer_index>]' Some common examples of these parameters for well-known models: Resnet18 and 50: model.layer4 -> 'target_layer':'layer4' VGG, densenet161: model.features[-1] -> 'target_layer':'features', 'target_layer_index':-1 mnasnet1_0: model.layers[-1] -> 'target_layer':'layers', 'target_layer_index':-1",
          "fixed": false
        },
        "target_layer_index": {
          "key": "target_layer_index",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Index of the target layer to be accessed. Provide it when you want to focus on a specific component of the target layer. If not provided, the whole layer specified as target when uploading the model will be used.",
          "fixed": false
        },
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the target class to generate the explanation. If not provided, defaults to the class with the highest predicted probability.",
          "fixed": false
        },
        "aug_smooth": {
          "key": "aug_smooth",
          "value": true,
          "default": true,
          "range": [
            true,
            false
          ],
          "required": "false",
          "type": "text",
          "description": "Boolean indicating whether to apply augmentation smoothing (defaults to True). This has the effect of better centering the CAM around the objects. However, it increases the run time by a factor of x6.",
          "fixed": false
        }
      }
    },
    "211ab9fd-72f6-4b8b-9791-58578166de34": {
      "id": "211ab9fd-72f6-4b8b-9791-58578166de34",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/TreeSHAPGlobal",
      "description": "",
      "properties": {},
      "display": {
        "x": 684,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Name of the target class to be explained. Ignore for regression models. Defaults to the first class target class defined in the configuration file.",
          "type": "text"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}