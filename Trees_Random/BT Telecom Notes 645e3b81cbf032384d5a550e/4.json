{
  "version": "0.1.0",
  "scope": "tree",
  "id": "4b00356a-03b0-4d4f-b9a6-eb7e62031388",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "907e4afd-ed7c-4226-88d5-f018e67eb42b",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "907e4afd-ed7c-4226-88d5-f018e67eb42b": {
      "id": "907e4afd-ed7c-4226-88d5-f018e67eb42b",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "97568388-84ae-4f35-8e73-7224391f455c",
        "Next": {
          "Id": "14cbc163-72c8-4649-9017-55a9be499db8",
          "Next": {
            "Id": "63860299-a5a3-4844-8951-43e265447e7d",
            "Next": {
              "Id": "5dc91f32-8412-4e5e-bfa9-49de09ad1f71",
              "Next": null
            }
          }
        }
      }
    },
    "97568388-84ae-4f35-8e73-7224391f455c": {
      "id": "97568388-84ae-4f35-8e73-7224391f455c",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -312,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What are the important features for the AI system?"
        }
      }
    },
    "14cbc163-72c8-4649-9017-55a9be499db8": {
      "id": "14cbc163-72c8-4649-9017-55a9be499db8",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/PertCF",
      "description": "",
      "properties": {},
      "display": {
        "x": -108,
        "y": 252
      },
      "params": {
        "encode_cat": {
          "key": "encode_cat",
          "value": "OrdinalEncoder",
          "default": "OrdinalEncoder",
          "range": [
            "auto",
            "manual",
            "BackwardDifferenceEncoder",
            "BaseNEncoder",
            "BinaryEncoder",
            "CatBoostEncoder",
            "CountEncoder",
            "GLMMEncoder",
            "GrayEncoder",
            "HelmertEncoder",
            "JamesSteinEncoder",
            "LeaveOneOutEncoder",
            "MEstimateEncoder",
            "OneHotEncoder",
            "OrdinalEncoder",
            "PolynomialEncoder",
            "QuantileEncoder",
            "RankHotEncoder",
            "SumEncoder",
            "TargetEncoder",
            "WOEEncoder"
          ],
          "required": "false",
          "type": "select",
          "description": "Encoding technique for categorical features. Prefer the same technique that is used for the model for reliable results.",
          "fixed": false
        },
        "global_sim": {
          "key": "global_sim",
          "value": "euclidean",
          "default": "euclidean",
          "range": [
            "ManualEuclidean",
            "ShapEuclidean",
            "braycurtis",
            "canberra",
            "chebyshev",
            "jaccard",
            "hamming",
            "cosine",
            "sqeuclidean",
            "cityblock",
            "minkowski",
            "euclidean"
          ],
          "required": "false",
          "type": "select",
          "description": "Global similarity technique.",
          "fixed": false
        },
        "local_sim": {
          "key": "local_sim",
          "value": "auto",
          "default": "auto",
          "range": [
            "manual",
            "auto"
          ],
          "required": "false",
          "type": "select",
          "description": "Local similarity technique.",
          "fixed": false
        },
        "shap_sample": {
          "key": "shap_sample",
          "value": 50,
          "default": 50,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of samples to use for calculating the SHAP values faster.",
          "fixed": false
        },
        "candidate_threshold": {
          "key": "candidate_threshold",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Step size threshold between CF candidates.",
          "fixed": false
        },
        "candidate_max_iter": {
          "key": "candidate_max_iter",
          "value": 20,
          "default": 20,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Maximum number of iterations to generate CF.",
          "fixed": false
        }
      }
    },
    "63860299-a5a3-4844-8951-43e265447e7d": {
      "id": "63860299-a5a3-4844-8951-43e265447e7d",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 96,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What are the necessary features that guarantee this outcome?"
        }
      }
    },
    "5dc91f32-8412-4e5e-bfa9-49de09ad1f71": {
      "id": "5dc91f32-8412-4e5e-bfa9-49de09ad1f71",
      "Concept": "Explanation Method",
      "Instance": "/Images/DeconvNet",
      "description": "",
      "properties": {},
      "display": {
        "x": 312,
        "y": 252
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "type": "text"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}