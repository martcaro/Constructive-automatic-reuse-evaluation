{
  "version": "0.1.0",
  "scope": "tree",
  "id": "675a649b-6f76-436d-8b44-71fb9ac930aa",
  "Instance": "Explanation Experience",
  "description": "",
  "root": "675dde42-a620-461b-8ad1-2b74d6dadd9b",
  "properties": {},
  "custom_nodes": [],
  "nodes": {
    "675dde42-a620-461b-8ad1-2b74d6dadd9b": {
      "id": "675dde42-a620-461b-8ad1-2b74d6dadd9b",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 0,
        "y": 120
      },
      "firstChild": {
        "Id": "a0cad9af-53e7-4125-8f33-fb07efcf87fa",
        "Next": {
          "Id": "6644d10d-54b3-48ac-8b9a-61dc6b1e8a37",
          "Next": {
            "Id": "ea4efff4-3475-443b-8023-c72e3081bbe0",
            "Next": {
              "Id": "8f6f828b-61eb-46ff-8bcf-578b5e63a0a2",
              "Next": {
                "Id": "3ffff58b-9be9-4497-9613-533b96f8438d",
                "Next": {
                  "Id": "d14aa44f-c2e3-42cc-819d-74737c2a3c85",
                  "Next": null
                }
              }
            }
          }
        }
      }
    },
    "a0cad9af-53e7-4125-8f33-fb07efcf87fa": {
      "id": "a0cad9af-53e7-4125-8f33-fb07efcf87fa",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -756,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "How does the AI system react if feature X is changed?"
        }
      }
    },
    "6644d10d-54b3-48ac-8b9a-61dc6b1e8a37": {
      "id": "6644d10d-54b3-48ac-8b9a-61dc6b1e8a37",
      "Concept": "Explanation Method",
      "Instance": "/Images/LIME",
      "description": "",
      "properties": {},
      "display": {
        "x": -540,
        "y": 252
      },
      "params": {
        "top_classes": {
          "key": "top_classes",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Integer representing the number of classes with the highest prediction probability to be explained.",
          "fixed": false
        },
        "segmentation_fn": {
          "key": "segmentation_fn",
          "value": "quickshift",
          "default": "quickshift",
          "range": [
            "quickshift",
            "slic",
            "felzenszwalb"
          ],
          "required": "false",
          "type": "select",
          "description": "A string with an image segmentation algorithm from the following:'quickshift', 'slic', or 'felzenszwalb'.",
          "fixed": false
        },
        "n_segments": {
          "key": "n_segments",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for slic segmentation algorithm. Specifies the (approximate) number of segments of the image.",
          "fixed": false
        },
        "kernel_size": {
          "key": "kernel_size",
          "value": 5,
          "default": 5,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for quickshift segmentation algorithm. Higher means fewer clusters",
          "fixed": false
        },
        "scale": {
          "key": "scale",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Only used for felzenszwalb segmentation algorithm. Higher scale means less and larger segments",
          "fixed": false
        },
        "png_width": {
          "key": "png_width",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "fixed": false
        },
        "png_height": {
          "key": "png_height",
          "value": 1200,
          "default": 1200,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "fixed": false
        }
      }
    },
    "ea4efff4-3475-443b-8023-c72e3081bbe0": {
      "id": "ea4efff4-3475-443b-8023-c72e3081bbe0",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": -336,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What other instances would get the same outcome?"
        }
      }
    },
    "8f6f828b-61eb-46ff-8bcf-578b5e63a0a2": {
      "id": "8f6f828b-61eb-46ff-8bcf-578b5e63a0a2",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 132,
        "y": 252
      },
      "firstChild": {
        "Id": "c55b1678-c094-45d5-beba-1f9d8a3a0cc2",
        "Next": {
          "Id": "4f9865eb-1414-4f8d-8c8e-9db07ec7a55e",
          "Next": null
        }
      }
    },
    "3ffff58b-9be9-4497-9613-533b96f8438d": {
      "id": "3ffff58b-9be9-4497-9613-533b96f8438d",
      "Concept": "User Question",
      "Instance": "User Question",
      "description": "",
      "properties": {},
      "display": {
        "x": 492,
        "y": 252
      },
      "params": {
        "Question": {
          "key": "Question",
          "value": "What would be the outcome if features X is changed to value V?"
        }
      }
    },
    "d14aa44f-c2e3-42cc-819d-74737c2a3c85": {
      "id": "d14aa44f-c2e3-42cc-819d-74737c2a3c85",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": 960,
        "y": 252
      },
      "firstChild": {
        "Id": "5850927e-d415-4e6d-b45a-c0365b8a79dc",
        "Next": {
          "Id": "bccf392a-470e-4b82-8e97-52e17651aef2",
          "Next": null
        }
      }
    },
    "c55b1678-c094-45d5-beba-1f9d8a3a0cc2": {
      "id": "c55b1678-c094-45d5-beba-1f9d8a3a0cc2",
      "Concept": "Priority",
      "Instance": "Priority",
      "description": "",
      "properties": {},
      "display": {
        "x": -24,
        "y": 384
      },
      "firstChild": {
        "Id": "8bf970b4-4b38-414f-92eb-17b66a0217d6",
        "Next": {
          "Id": "b8de96ef-417e-48f4-88d0-b8a0b5672e50",
          "Next": null
        }
      }
    },
    "4f9865eb-1414-4f8d-8c8e-9db07ec7a55e": {
      "id": "4f9865eb-1414-4f8d-8c8e-9db07ec7a55e",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/DicePrivate",
      "description": "",
      "properties": {},
      "display": {
        "x": 288,
        "y": 384
      },
      "params": {
        "desired_class": {
          "key": "desired_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String representing the desired counterfactual class. Defaults to class 0 for multiclass problems and to opposite class for binary class problems. You may also use the string 'opposite' for binary classification",
          "fixed": false
        },
        "features_to_vary": {
          "key": "features_to_vary",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "List of strings representing the feature names to vary. Defaults to all features.",
          "fixed": false
        },
        "num_cfs": {
          "key": "num_cfs",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of counterfactuals to be generated for each instance.",
          "fixed": false
        },
        "method": {
          "key": "method",
          "value": "random",
          "default": "random",
          "range": [
            "random",
            "genetic"
          ],
          "required": "false",
          "type": "select",
          "description": "The method used for counterfactual generation. The supported methods for private data are: 'random' (random sampling) and 'genetic' (genetic algorithms). Defaults to 'random'.",
          "fixed": false
        }
      }
    },
    "5850927e-d415-4e6d-b45a-c0365b8a79dc": {
      "id": "5850927e-d415-4e6d-b45a-c0365b8a79dc",
      "Concept": "Sequence",
      "Instance": "Sequence",
      "description": "",
      "properties": {},
      "display": {
        "x": 804,
        "y": 384
      },
      "firstChild": {
        "Id": "e28cd555-d23e-4e68-8e56-6ff122b58a4c",
        "Next": {
          "Id": "4fb76887-c3ec-4f21-8002-2318429dcfec",
          "Next": null
        }
      }
    },
    "bccf392a-470e-4b82-8e97-52e17651aef2": {
      "id": "bccf392a-470e-4b82-8e97-52e17651aef2",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/ROC-AUC",
      "description": "",
      "properties": {},
      "display": {
        "x": 1116,
        "y": 384
      },
      "params": {
        "cutoff": {
          "key": "cutoff",
          "value": 0.5,
          "default": 0.5,
          "range": [
            0,
            1
          ],
          "required": "false",
          "type": "number",
          "description": "Float value for the cutoff to consider when building the confusion matrix.",
          "fixed": false
        },
        "label": {
          "key": "label",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String with the name of the label that will be considered the positive class. Defaults to class at index 1 in configuration file.",
          "fixed": false
        }
      }
    },
    "8bf970b4-4b38-414f-92eb-17b66a0217d6": {
      "id": "8bf970b4-4b38-414f-92eb-17b66a0217d6",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/SHAPDependence",
      "description": "",
      "properties": {},
      "display": {
        "x": -132,
        "y": 516
      },
      "params": {
        "feature": {
          "key": "feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the feature to be displayed. Defaults to the feature with the highest average SHAP value.",
          "fixed": false
        },
        "interaction_feature": {
          "key": "interaction_feature",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "Name of the interaction feature used for coloring the instances. Defaults to the feature with the highest interaction value with the feature specified in the previous parameter.",
          "fixed": false
        }
      }
    },
    "b8de96ef-417e-48f4-88d0-b8a0b5672e50": {
      "id": "b8de96ef-417e-48f4-88d0-b8a0b5672e50",
      "Concept": "Explanation Method",
      "Instance": "/Images/Saliency",
      "description": "",
      "properties": {},
      "display": {
        "x": 84,
        "y": 516
      },
      "params": {
        "target_class": {
          "key": "target_class",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "text",
          "description": "String denoting the desired class for the computation of the attributions. Ignore for regression models. Defaults to the predicted class of the instance.",
          "fixed": false
        }
      }
    },
    "e28cd555-d23e-4e68-8e56-6ff122b58a4c": {
      "id": "e28cd555-d23e-4e68-8e56-6ff122b58a4c",
      "Concept": "Explanation Method",
      "Instance": "/Timeseries/NearestNeighbours",
      "description": "",
      "properties": {},
      "display": {
        "x": 708,
        "y": 516
      },
      "params": {
        "distance": {
          "key": "distance",
          "value": "dtw",
          "default": "dtw",
          "range": [
            "dtw",
            "softdtw",
            "ctw",
            "euclidean",
            "sqeuclidean"
          ],
          "required": "false",
          "type": "select",
          "description": "Distance metric to be used. Defaults to 'dtw'.",
          "fixed": false
        },
        "n_neighbours": {
          "key": "n_neighbours",
          "value": 3,
          "default": 3,
          "range": [
            null,
            null
          ],
          "required": "false",
          "type": "number",
          "description": "Number of neighbours to be shown. Default is 3.",
          "fixed": false
        }
      }
    },
    "4fb76887-c3ec-4f21-8002-2318429dcfec": {
      "id": "4fb76887-c3ec-4f21-8002-2318429dcfec",
      "Concept": "Explanation Method",
      "Instance": "/Tabular/LIME",
      "description": "",
      "properties": {},
      "display": {
        "x": 912,
        "y": 516
      },
      "params": {
        "output_classes": {
          "key": "output_classes",
          "value": null,
          "default": null,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Array of strings representing the classes to be explained. Defaults to class at index 1. This parameter is overriden by 'top_classes' so make sure to set 'top_classes' to 0 to use it",
          "type": "text"
        },
        "top_classes": {
          "key": "top_classes",
          "value": 1,
          "default": 1,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Integer representing the number of classes with the highest prediction probability to be explained. Overrides 'output_classes' if provided.",
          "type": "number"
        },
        "num_features": {
          "key": "num_features",
          "value": 10,
          "default": 10,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Integer representing the maximum number of features to be included in the explanation.",
          "type": "number"
        },
        "png_width": {
          "key": "png_width",
          "value": 1000,
          "default": 1000,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Width (in pixels) of the png image containing the explanation.",
          "type": "number"
        },
        "png_height": {
          "key": "png_height",
          "value": 400,
          "default": 400,
          "range": [
            null,
            null
          ],
          "required": "false",
          "description": "Height (in pixels) of the png image containing the explanation.",
          "type": "number"
        }
      }
    }
  },
  "display": {
    "camera_x": 960,
    "camera_y": 536.5,
    "camera_z": 1,
    "x": 0,
    "y": 0
  }
}